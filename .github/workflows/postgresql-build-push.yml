name: Build and Push PostgreSQL Version

on:
  push:
    branches: [ dev, develop, postgresql ]
    paths-ignore:
      - 'README.md'
      - 'docs/**'
      - '.github/workflows/mysql-*.yml'
  workflow_dispatch:  # Allow manual triggering

env:
  REGISTRY: registry.germainleignel.com/library
  IMAGE_NAME: gestion-produits-pg
  DB_TYPE: postgresql

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Extract metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=dev
            type=sha,prefix=postgresql-
            type=ref,event=branch,prefix=postgresql-
            type=ref,event=tag,prefix=postgresql-
  
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile.postgresql
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            DB_TYPE=postgresql
          cache-from: type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:postgresql-buildcache
          cache-to: type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:postgresql-buildcache,mode=max

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        
      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
          
      - name: Add host key to known hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts
          
      - name: Deploy to K3s
        run: |
          ssh -o StrictHostKeyChecking=accept-new ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} 'cd ~/projects/gestion-produits && git pull && ./deploy-k8s.sh ${{ github.workflow == "PostgreSQL Build and Push" && "dev" || "prod" }} ${{ github.workflow == "PostgreSQL Build and Push" && "postgresql" || "mysql" }}'
